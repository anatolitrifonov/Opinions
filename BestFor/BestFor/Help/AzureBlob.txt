Local development
_______________________________________________________________________

Start Microsoft Storage Azure Emilator
Connection String 
string connString = "UseDevelopmentStorage=true;";

Local files are stored at
C:\Users\{user}\AppData\Local\AzureStorageEmulator


Production
_______________________________________________________________________

General Notes
_______________________________________________________________________

ContainerName can not have underscores.
AzureBlobsContainerName <- can not have underscores.
Block blob name can not contain "\" because it then becomes a CloudBlobDirectory instead of CloudBlockBlob
GetBlockBlobReference(name) 

Will set the permissions on the container to "read blob" and produce the direct link to user's image.
How it will work.
All we need to cache is the fact if user has or does not have an image because both path and extension are predefined.
Extension is always png.
Once image is uploaded we will update user object in cache with the knowledge "has image".
And if user cache blob part is not laoded we will load it once user's image is requested.
We will not store a separate cache of images for now.
1. Every time user uploads the image we will cache the fact that user has an image.
2. We will set the cache flag too stating that cache is up to date.
3. If cache about user's image expires we will go to search blob and return extension.

Not going to do the SAS access thing although the pattern is here.

var sasConstraints = new SharedAccessBlobPolicy();
sasConstraints.SharedAccessStartTime = DateTime.UtcNow.AddMinutes(-5);
sasConstraints.SharedAccessExpiryTime = DateTime.UtcNow.AddMinutes(10);
sasConstraints.Permissions = SharedAccessBlobPermissions.Read;

var sasBlobToken = blob.GetSharedAccessSignature(sasConstraints);

return blob.Uri + sasBlobToken;
http://stackoverflow.com/questions/30467013/how-to-download-a-file-to-browser-from-azure-blob-storage

Problem is that it is not clear "when to regenerate the link?" all the time seems too much.

Default url to images is stored in application settings.
Avatar URL is azure url + container name + username + png
